{
    "Description": "Private VPC Template",
    "Parameters": {
        "VGW": {
            "Default": "vgw-012345678",
            "Type": "String",
            "Description": "VPC Gateway"
        }
    },
    "AWSTemplateFormatVersion": "2010-09-09",
    "Outputs": {
        "NATGW3": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-NATGW-NATGW3"
                }
            },
            "Description": "NATGW3",
            "Value": {
                "Ref": "NATGW3"
            }
        },
        "NATGW2": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-NATGW-NATGW2"
                }
            },
            "Description": "NATGW2",
            "Value": {
                "Ref": "NATGW2"
            }
        },
        "NATGW1": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-NATGW-NATGW1"
                }
            },
            "Description": "NATGW1",
            "Value": {
                "Ref": "NATGW1"
            }
        },
        "RestrictedSubnetAcl": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-NACL-RestrictedSubnetAcl"
                }
            },
            "Description": "RestrictedSubnetAcl",
            "Value": {
                "Ref": "RestrictedSubnetAcl"
            }
        },
        "PRIVATEEGRESSVPC": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-VPCid"
                }
            },
            "Description": "PRIVATEEGRESSVPC",
            "Value": {
                "Ref": "PRIVATEEGRESSVPC"
            }
        },
        "EIPNATGW2": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EIP-NATGW2"
                }
            },
            "Description": "EIP for NATGW2",
            "Value": {
                "Ref": "EIPNATGW2"
            }
        },
        "ReservedNet2": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-ReservedNet2"
                }
            },
            "Description": "ReservedNet2",
            "Value": {
                "Ref": "ReservedNet2"
            }
        },
        "Internal1": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-Internal1"
                }
            },
            "Description": "Internal1",
            "Value": {
                "Ref": "Internal1"
            }
        },
        "Internal2": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-Internal2"
                }
            },
            "Description": "Internal2",
            "Value": {
                "Ref": "Internal2"
            }
        },
        "Internal3": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-Internal3"
                }
            },
            "Description": "Internal3",
            "Value": {
                "Ref": "Internal3"
            }
        },
        "ReservedNet3": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-ReservedNet3"
                }
            },
            "Description": "ReservedNet3",
            "Value": {
                "Ref": "ReservedNet3"
            }
        },
        "EIPNATGW3": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EIP-NATGW3"
                }
            },
            "Description": "EIP for NATGW3",
            "Value": {
                "Ref": "EIPNATGW3"
            }
        },
        "ReservedNet1": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-ReservedNet1"
                }
            },
            "Description": "ReservedNet1",
            "Value": {
                "Ref": "ReservedNet1"
            }
        },
        "EIPNATGW1": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EIP-NATGW1"
                }
            },
            "Description": "EIP for NATGW1",
            "Value": {
                "Ref": "EIPNATGW1"
            }
        },
        "ReservedMgmt1": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-ReservedMgmt1"
                }
            },
            "Description": "ReservedMgmt1",
            "Value": {
                "Ref": "ReservedMgmt1"
            }
        },
        "ReservedMgmt2": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-ReservedMgmt2"
                }
            },
            "Description": "ReservedMgmt2",
            "Value": {
                "Ref": "ReservedMgmt2"
            }
        },
        "ReservedMgmt3": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-ReservedMgmt3"
                }
            },
            "Description": "ReservedMgmt3",
            "Value": {
                "Ref": "ReservedMgmt3"
            }
        },
        "PublicRT": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-RouteTable-PublicRT"
                }
            },
            "Description": "PublicRT",
            "Value": {
                "Ref": "PublicRT"
            }
        },
        "PerimeterInternal1": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-PerimeterInternal1"
                }
            },
            "Description": "PerimeterInternal1",
            "Value": {
                "Ref": "PerimeterInternal1"
            }
        },
        "PerimeterInternal2": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-PerimeterInternal2"
                }
            },
            "Description": "PerimeterInternal2",
            "Value": {
                "Ref": "PerimeterInternal2"
            }
        },
        "PerimeterInternal3": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-Subnet-PerimeterInternal3"
                }
            },
            "Description": "PerimeterInternal3",
            "Value": {
                "Ref": "PerimeterInternal3"
            }
        },
        "InternalRT1": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-RouteTable-InternalRT1"
                }
            },
            "Description": "InternalRT1",
            "Value": {
                "Ref": "InternalRT1"
            }
        },
        "InternalRT2": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-RouteTable-InternalRT2"
                }
            },
            "Description": "InternalRT2",
            "Value": {
                "Ref": "InternalRT2"
            }
        },
        "InternalRT3": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-RouteTable-InternalRT3"
                }
            },
            "Description": "InternalRT3",
            "Value": {
                "Ref": "InternalRT3"
            }
        },
        "InternalSubnetAcl": {
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-NACL-InternalSubnetAcl"
                }
            },
            "Description": "InternalSubnetAcl",
            "Value": {
                "Ref": "InternalSubnetAcl"
            }
        }
    },
    "Resources": {
        "RestrictedSubnetAclEntryOutHTTPSIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "105",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "443",
                    "From": "443"
                }
            }
        },
        "PerimeterInternal3SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PerimeterInternal3"
                },
                "RouteTableId": {
                    "Ref": "InternalRT3"
                }
            }
        },
        "Internal2SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Internal2"
                },
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                }
            }
        },
        "RestrictedSubnetAclEntryInSquid2": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "140",
                "Protocol": "6",
                "PortRange": {
                    "To": "3128",
                    "From": "3128"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "InternalSubnetAclEntryOutUDPDNSIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "113",
                "Protocol": "17",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                }
            }
        },
        "VPCFlowLogsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:*"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*",
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "vpc-flow-logs.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "Internal3SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Internal3"
                },
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                }
            }
        },
        "InternalSubnetAclEntryInUDPUnreserved": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "103",
                "Protocol": "17",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "ReservedNet3SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedNet3"
                },
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                }
            }
        },
        "s3EndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "PublicRT"
                    },
                    {
                        "Ref": "InternalRT1"
                    },
                    {
                        "Ref": "InternalRT2"
                    },
                    {
                        "Ref": "InternalRT3"
                    }
                ],
                "VpcEndpointType": "Gateway",
                "PolicyDocument": "{\n    \"Version\":\"2012-10-17\",\n    \"Statement\":[\n        {\n            \"Effect\":\"Allow\",\n            \"Principal\": \"*\",\n            \"Action\":[\"s3:*\"],\n            \"Resource\":[\"*\"]\n        }\n    ]\n}\n",
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".s3"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                }
            }
        },
        "dynamodbEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "PublicRT"
                    },
                    {
                        "Ref": "InternalRT1"
                    },
                    {
                        "Ref": "InternalRT2"
                    },
                    {
                        "Ref": "InternalRT3"
                    }
                ],
                "VpcEndpointType": "Gateway",
                "PolicyDocument": "{\n    \"Version\":\"2012-10-17\",\n    \"Statement\":[\n        {\n            \"Effect\":\"Allow\",\n            \"Principal\": \"*\",\n            \"Action\":[\"s3:*\"],\n            \"Resource\":[\"*\"]\n        }\n    ]\n}\n",
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".dynamodb"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                }
            }
        },
        "Internal1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "Internal1",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.3.0/24",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "Internal2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "Internal2",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        4,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.4.0/24",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "Internal3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "Internal3",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        5,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.5.0/24",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "InternalSubnetAclEntryOutHTTPS": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "103",
                "Protocol": "6",
                "PortRange": {
                    "To": "443",
                    "From": "443"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "RestrictedSubnetAclEntryOutDNSTCP": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "150",
                "Protocol": "6",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "ReservedNet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "ReservedNet3",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        6,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.2.192/26",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "ReservedNet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "ReservedNet2",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        7,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.1.192/26",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "ReservedNet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "ReservedNet1",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        8,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.0.192/26",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "RouteNATGW1IPv6": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "EgressOnlyInternetGatewayId": {
                    "Ref": "EgressGateway"
                },
                "DestinationIpv6CidrBlock": "::/0",
                "RouteTableId": {
                    "Ref": "InternalRT1"
                }
            }
        },
        "ec2EndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".ec2"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "RestrictedSubnetAclEntryInHTTP": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "101",
                "Protocol": "6",
                "PortRange": {
                    "To": "80",
                    "From": "80"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "InternalSubnetAclEntryOutHTTP": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "102",
                "Protocol": "6",
                "PortRange": {
                    "To": "80",
                    "From": "80"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "ReservedMgmt1SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedMgmt1"
                },
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                }
            }
        },
        "ReservedNet2SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedNet2"
                },
                "RouteTableId": {
                    "Ref": "PublicRT"
                }
            }
        },
        "RestrictedSubnetAclEntryOutSSH": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "103",
                "Protocol": "6",
                "PortRange": {
                    "To": "22",
                    "From": "22"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "Internal1SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Internal1"
                },
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                }
            }
        },
        "cloudtrailEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".cloudtrail"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "RestrictedSubnetAclEntryInUDPUnReservedIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "93",
                "Protocol": "17",
                "Ipv6CidrBlock": "::/0",
                "Egress": "false",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                }
            }
        },
        "InternalRT3RoutePropagation": {
            "Type": "AWS::EC2::VPNGatewayRoutePropagation",
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "InternalRT3"
                    }
                ],
                "VpnGatewayId": {
                    "Ref": "VGW"
                }
            },
            "DependsOn": [
                "VPCGatewayAttachment"
            ]
        },
        "ReservedMgmt2SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedMgmt2"
                },
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                }
            }
        },
        "kmsEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".kms"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "ReservedMgmt3SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedMgmt3"
                },
                "RouteTableId": {
                    "Ref": "InternalRT3"
                }
            }
        },
        "PublicRouteIPv6": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRT"
                },
                "DestinationIpv6CidrBlock": "::/0"
            }
        },
        "RestrictedSubnetAclEntryInNetBios1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "80",
                "Protocol": "6",
                "PortRange": {
                    "To": "139",
                    "From": "137"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "RestrictedSubnetAclEntryOutDNSUDP": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "160",
                "Protocol": "17",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "RestrictedSubnetAclEntryInUDPUnReserved": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "91",
                "Protocol": "17",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "PublicRTRoutePropagation": {
            "Type": "AWS::EC2::VPNGatewayRoutePropagation",
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "PublicRT"
                    }
                ],
                "VpnGatewayId": {
                    "Ref": "VGW"
                }
            },
            "DependsOn": [
                "VPCGatewayAttachment"
            ]
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "PublicRT"
                }
            }
        },
        "InternalRT1RoutePropagation": {
            "Type": "AWS::EC2::VPNGatewayRoutePropagation",
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "InternalRT1"
                    }
                ],
                "VpnGatewayId": {
                    "Ref": "VGW"
                }
            },
            "DependsOn": [
                "VPCGatewayAttachment"
            ]
        },
        "RestrictedSubnetAclEntryIn": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "110",
                "Protocol": "-1",
                "PortRange": {
                    "To": "65535",
                    "From": "1"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "RouteNATGW3IPv6": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "EgressOnlyInternetGatewayId": {
                    "Ref": "EgressGateway"
                },
                "DestinationIpv6CidrBlock": "::/0",
                "RouteTableId": {
                    "Ref": "InternalRT3"
                }
            }
        },
        "InternalSubnetAclEntryOutHTTPSIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "105",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "443",
                    "From": "443"
                }
            }
        },
        "InternalSubnetAclEntryIn": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "PortRange": {
                    "To": "65535",
                    "From": "1"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "logsEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".logs"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "IPv6Block": {
            "Type": "AWS::EC2::VPCCidrBlock",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "AmazonProvidedIpv6CidrBlock": "true"
            }
        },
        "RestrictedSubnetAclEntryInHTTPSIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "104",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "false",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "443",
                    "From": "443"
                }
            }
        },
        "InternalSubnetAclEntryInUDPUnreservedIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "105",
                "Protocol": "17",
                "Ipv6CidrBlock": "::/0",
                "Egress": "false",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                }
            }
        },
        "RestrictedSubnetAclEntryInNetBios": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "170",
                "Protocol": "6",
                "PortRange": {
                    "To": "389",
                    "From": "389"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "PerimeterInternal1SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PerimeterInternal1"
                },
                "RouteTableId": {
                    "Ref": "InternalRT1"
                }
            }
        },
        "RestrictedSubnetAclEntryOutSSHIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "106",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "22",
                    "From": "22"
                }
            }
        },
        "RestrictedSubnetAclEntryOutUDPUnReservedIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "93",
                "Protocol": "17",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                }
            }
        },
        "InternalSubnetAclEntryOutTCPDNS": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "110",
                "Protocol": "6",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "RestrictedSubnetAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "RestrictedSubnetAcl",
                        "Key": "Name"
                    }
                ]
            }
        },
        "ReservedNet3SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedNet3"
                },
                "RouteTableId": {
                    "Ref": "PublicRT"
                }
            }
        },
        "InternalSubnetAclEntryOutSSH": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "150",
                "Protocol": "6",
                "PortRange": {
                    "To": "22",
                    "From": "22"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "PublicRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "PublicRT",
                        "Key": "Name"
                    }
                ]
            }
        },
        "PRIVATEEGRESSVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "CidrBlock": "172.16.0.0/20",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Value": "PRIVATEEGRESSVPC",
                        "Key": "Name"
                    }
                ]
            }
        },
        "InternalSubnetAclEntryInTCPUnreserved": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "102",
                "Protocol": "6",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "RestrictedSubnetAclEntryOutPuppet": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "94",
                "Protocol": "6",
                "PortRange": {
                    "To": "8140",
                    "From": "8140"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "PerimeterInternal2SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PerimeterInternal2"
                },
                "RouteTableId": {
                    "Ref": "InternalRT2"
                }
            }
        },
        "executeapiEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".execute-api"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "ReservedMgmt3SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedMgmt3"
                },
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                }
            }
        },
        "InternalRT1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "InternalRT1",
                        "Key": "Name"
                    }
                ]
            }
        },
        "InternalRT2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "InternalRT2",
                        "Key": "Name"
                    }
                ]
            }
        },
        "InternalRT3": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "InternalRT3",
                        "Key": "Name"
                    }
                ]
            }
        },
        "elasticloadbalancingEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".elasticloadbalancing"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "IGWVPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "Internal1SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Internal1"
                },
                "RouteTableId": {
                    "Ref": "InternalRT1"
                }
            }
        },
        "RestrictedSubnetAclEntryInHTTPS": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "102",
                "Protocol": "6",
                "PortRange": {
                    "To": "443",
                    "From": "443"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "InternalSubnetAclEntryOutUDPUnreserved": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "107",
                "Protocol": "6",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "RestrictedSubnetAclEntryInDNSUDP": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "160",
                "Protocol": "17",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "InternalSubnetAclEntryOutTCPUnreserved": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "106",
                "Protocol": "6",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "RestrictedSubnetAclEntryOutDNSTCPIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "151",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                }
            }
        },
        "servicecatalogEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".servicecatalog"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "ssmEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".ssm"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "Internal2SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Internal2"
                },
                "RouteTableId": {
                    "Ref": "InternalRT2"
                }
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Value": "InternetGateway",
                        "Key": "Name"
                    }
                ]
            }
        },
        "RestrictedSubnetAclEntryNTP": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "120",
                "Protocol": "6",
                "PortRange": {
                    "To": "123",
                    "From": "123"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "RouteNATGW1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGW1"
                },
                "RouteTableId": {
                    "Ref": "InternalRT1"
                }
            }
        },
        "EgressGateway": {
            "Type": "AWS::EC2::EgressOnlyInternetGateway",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                }
            }
        },
        "RouteNATGW3": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGW3"
                },
                "RouteTableId": {
                    "Ref": "InternalRT3"
                }
            }
        },
        "RouteNATGW2": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGW2"
                },
                "RouteTableId": {
                    "Ref": "InternalRT2"
                }
            }
        },
        "InternalSubnetAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "InternalSubnetAcl",
                        "Key": "Name"
                    }
                ]
            }
        },
        "ssmmessagesEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".ssmmessages"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "codebuildEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".codebuild"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "InternalSubnetAclEntryOut": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "PortRange": {
                    "To": "65535",
                    "From": "1"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "NATGW1": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedNet1"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIPNATGW1",
                        "AllocationId"
                    ]
                },
                "Tags": [
                    {
                        "Value": "NATGW1",
                        "Key": "Name"
                    }
                ]
            }
        },
        "ReservedNet1SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedNet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRT"
                }
            }
        },
        "ReservedMgmt1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "ReservedMgmt1",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.0.0/26",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "ReservedMgmt2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "ReservedMgmt2",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.1.0/26",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "ReservedMgmt3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "ReservedMgmt3",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.2.0/26",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "RouteNATGW2IPv6": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "EgressOnlyInternetGatewayId": {
                    "Ref": "EgressGateway"
                },
                "DestinationIpv6CidrBlock": "::/0",
                "RouteTableId": {
                    "Ref": "InternalRT2"
                }
            }
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "VpnGatewayId": {
                    "Ref": "VGW"
                }
            }
        },
        "PerimeterInternal1SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PerimeterInternal1"
                },
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                }
            }
        },
        "ReservedNet2SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedNet2"
                },
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                }
            }
        },
        "RestrictedSubnetAclEntryOut": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "110",
                "Protocol": "-1",
                "PortRange": {
                    "To": "65535",
                    "From": "1"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "PerimeterInternal2SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PerimeterInternal2"
                },
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                }
            }
        },
        "RestrictedSubnetAclEntryOutHTTPIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "104",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "80",
                    "From": "80"
                }
            }
        },
        "RestrictedSubnetAclEntryOutHTTPS": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "102",
                "Protocol": "6",
                "PortRange": {
                    "To": "443",
                    "From": "443"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "ec2messagesEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".ec2messages"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "RestrictedSubnetAclEntryOutTCPUnReservedIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "92",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                }
            }
        },
        "eventsEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".events"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "monitoringEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".monitoring"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "VPCEndpoint": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "VPCEndpoint",
                        "Key": "Name"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "ToPort": -1,
                        "IpProtocol": "icmp",
                        "CidrIp": "172.16.0.0/20",
                        "Description": "All ICMP Traffic",
                        "FromPort": -1
                    },
                    {
                        "ToPort": 65535,
                        "IpProtocol": "tcp",
                        "CidrIp": "172.16.0.0/20",
                        "Description": "All TCP Traffic",
                        "FromPort": 0
                    },
                    {
                        "ToPort": 65535,
                        "IpProtocol": "udp",
                        "CidrIp": "172.16.0.0/20",
                        "Description": "All UDP Traffic",
                        "FromPort": 0
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "ToPort": -1,
                        "IpProtocol": "icmp",
                        "CidrIp": "172.16.0.0/20",
                        "Description": "All ICMP Traffic",
                        "FromPort": -1
                    },
                    {
                        "ToPort": 65535,
                        "IpProtocol": "tcp",
                        "CidrIp": "172.16.0.0/20",
                        "Description": "All TCP Traffic",
                        "FromPort": 0
                    },
                    {
                        "ToPort": 65535,
                        "IpProtocol": "udp",
                        "CidrIp": "172.16.0.0/20",
                        "Description": "All UDP Traffic",
                        "FromPort": 0
                    }
                ],
                "GroupName": "VPCEndpoint",
                "GroupDescription": "Squid Firewall Rules"
            }
        },
        "InternalRT2RoutePropagation": {
            "Type": "AWS::EC2::VPNGatewayRoutePropagation",
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "InternalRT2"
                    }
                ],
                "VpnGatewayId": {
                    "Ref": "VGW"
                }
            },
            "DependsOn": [
                "VPCGatewayAttachment"
            ]
        },
        "RestrictedSubnetAclEntryInTCPUnReservedIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "92",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "false",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                }
            }
        },
        "snsEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".sns"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "sagemakerapiEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".sagemaker.api"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "ReservedMgmt1SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedMgmt1"
                },
                "RouteTableId": {
                    "Ref": "InternalRT1"
                }
            }
        },
        "kinesisstreamsEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".kinesis-streams"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "RestrictedSubnetAclEntryInTCPUnReserved": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "90",
                "Protocol": "6",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "VPCFlowLogs": {
            "Type": "AWS::EC2::FlowLog",
            "Properties": {
                "ResourceType": "VPC",
                "ResourceId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "DeliverLogsPermissionArn": {
                    "Fn::GetAtt": [
                        "VPCFlowLogsRole",
                        "Arn"
                    ]
                },
                "LogGroupName": "FlowLogsGroup",
                "TrafficType": "ALL"
            }
        },
        "NATGW3": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedNet3"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIPNATGW3",
                        "AllocationId"
                    ]
                },
                "Tags": [
                    {
                        "Value": "NATGW3",
                        "Key": "Name"
                    }
                ]
            }
        },
        "NATGW2": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedNet2"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIPNATGW2",
                        "AllocationId"
                    ]
                },
                "Tags": [
                    {
                        "Value": "NATGW2",
                        "Key": "Name"
                    }
                ]
            }
        },
        "DhcpOptions": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "NtpServers": [
                    "169.254.169.123"
                ],
                "NetbiosNodeType": 2,
                "DomainNameServers": [
                    "172.16.0.2"
                ],
                "Tags": [
                    {
                        "Value": "DhcpOptions",
                        "Key": "Name"
                    }
                ]
            }
        },
        "secretsmanagerEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".secretsmanager"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "ReservedNet1SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedNet1"
                },
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                }
            }
        },
        "Internal3SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Internal3"
                },
                "RouteTableId": {
                    "Ref": "InternalRT3"
                }
            }
        },
        "sagemakerruntimeEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".sagemaker.runtime"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "InternalSubnetAclEntryOutUDPDNS": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "111",
                "Protocol": "17",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "RestrictedSubnetAclEntryOutHTTP": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "101",
                "Protocol": "6",
                "PortRange": {
                    "To": "80",
                    "From": "80"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "InternalSubnetAclEntryOutTCPDNSIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "112",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                }
            }
        },
        "configEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".config"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        },
        "EIPNATGW2": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "EIPNATGW3": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "InternalSubnetAclEntryOutHTTPIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "104",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "80",
                    "From": "80"
                }
            }
        },
        "EIPNATGW1": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "PerimeterInternal3SubnetNetworkACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PerimeterInternal3"
                },
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                }
            }
        },
        "RestrictedSubnetAclEntryInHTTPIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "103",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "false",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "80",
                    "From": "80"
                }
            }
        },
        "ReservedMgmt2SubnetRoutetableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "ReservedMgmt2"
                },
                "RouteTableId": {
                    "Ref": "InternalRT2"
                }
            }
        },
        "RestrictedSubnetAclEntryOutTCPUnReserved": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "90",
                "Protocol": "6",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "RestrictedSubnetAclEntryInDNSTCP": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "150",
                "Protocol": "6",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                },
                "Egress": "false",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "DhcpOptionsAssociation": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "DhcpOptionsId": {
                    "Ref": "DhcpOptions"
                }
            }
        },
        "PerimeterInternal1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "PerimeterInternal1",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        9,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.6.0/24",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "PerimeterInternal2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "PerimeterInternal2",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        10,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.7.0/24",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "PerimeterInternal3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "Tags": [
                    {
                        "Value": "PerimeterInternal3",
                        "Key": "Name"
                    }
                ],
                "Ipv6CidrBlock": {
                    "Fn::Select": [
                        11,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::GetAtt": [
                                                "PRIVATEEGRESSVPC",
                                                "Ipv6CidrBlocks"
                                            ]
                                        }
                                    ]
                                },
                                12,
                                64
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.16.8.0/24",
                "AssignIpv6AddressOnCreation": true
            },
            "DependsOn": "IPv6Block"
        },
        "RestrictedSubnetAclEntryOutNetBios": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "170",
                "Protocol": "6",
                "PortRange": {
                    "To": "389",
                    "From": "389"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "InternalSubnetAclEntryInTCPUnreservedIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "InternalSubnetAcl"
                },
                "RuleNumber": "104",
                "Protocol": "6",
                "Ipv6CidrBlock": "::/0",
                "Egress": "false",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                }
            }
        },
        "RestrictedSubnetAclEntryOutNetBios1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "180",
                "Protocol": "6",
                "PortRange": {
                    "To": "139",
                    "From": "137"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "172.16.0.0/16"
            }
        },
        "RestrictedSubnetAclEntryOutUDPUnReserved": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "91",
                "Protocol": "17",
                "PortRange": {
                    "To": "65535",
                    "From": "1024"
                },
                "Egress": "true",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "RestrictedSubnetAclEntryOutDNSUDPIPv6": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "RestrictedSubnetAcl"
                },
                "RuleNumber": "161",
                "Protocol": "17",
                "Ipv6CidrBlock": "::/0",
                "Egress": "true",
                "RuleAction": "allow",
                "PortRange": {
                    "To": "53",
                    "From": "53"
                }
            }
        },
        "cloudformationEndPoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "VpcEndpointType": "Interface",
                "SubnetIds": [
                    {
                        "Ref": "ReservedMgmt1"
                    },
                    {
                        "Ref": "ReservedMgmt2"
                    },
                    {
                        "Ref": "ReservedMgmt3"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".cloudformation"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "PRIVATEEGRESSVPC"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "VPCEndpoint"
                    }
                ]
            }
        }
    },
    "Mappings": {}
}